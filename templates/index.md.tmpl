---
layout: ""
page_title: "Windbag Provider"
description: |-
  The Windbag provider is used to build and manifest the Windows image crossing multi-release Windows hosts.
---

# Windbag Provider

The Windbag provider is used to build and manifest the Windows image crossing multi-release Windows hosts.

## Why this tool?

To package a Windows manifest Docker image(crossing multi-release), we need to set up these Windows hosts one-by-one and execute `docker build` from the lowest release to the highest release.

So boring~

Windbag can help you to complete the `docker build`, `docker push` and `docker manifest` without Hyper-V support.

## Highlight

- Inject [**Target** Platform Arguments](https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope) like what [BuildKit](https://docs.docker.com/engine/reference/builder/#buildkit) does.

  + `TARGETPLATFORM` : platform of the build result, e.g. `windows/amd64`, `windows/arm64`.
  + `TARGETOS` : OS component of `TARGETPLATFORM`, always be `windows`.
  + `TARGETARCH` : architecture component of `TARGETPLATFORM`, e.g. `amd64`, `arm64`.
  + `TARGETVARIANT` : variant component of `TARGETPLATFORM`, e.g. `1809`, `2004`.

- Inject Release Build Arguments.

  + `WINDBAGRELEASE` : OS release ID, the stale argument `RELEASEID` has been deprecated, e.g. `1809`, `2004`.
  + `WINDBAGRELEASE_*` : prefix of joining the build arguments related with OS release ID, which can be utilized to configure the basic image.

## How to enable SSH service on Windows host?

You can run the following powershell commands through cloudbase-init/user-data scripts when the machine is initializing.

```powershell

> # enable SSH service and configure a remote administrator with password
> $env:SSH_USER="<user name>";
> $env:SSH_USER_PASSWORD="<user password>";
> Invoke-WebRequest -UseBasicParsing -Uri https://raw.githubusercontent.com/thxCode/terraform-provider-windbag/master/tools/sshd.ps1 | Invoke-Expression;

> # enable SSH service and configure a remote administrator with public key
> $env:SSH_USER="<user name>";
> $env:SSH_USER_PUBLICKEY="<the content of user public key>";
> Invoke-WebRequest -UseBasicParsing -Uri https://raw.githubusercontent.com/thxCode/terraform-provider-windbag/master/tools/sshd.ps1 | Invoke-Expression;

> # enable SSH service and configure a remote user with public key
> $env:SSH_USER_GROUP="sshusers";
> $env:SSH_USER="<user name>";
> $env:SSH_USER_PUBLICKEY="<the content of user public key>";
> Invoke-WebRequest -UseBasicParsing -Uri https://raw.githubusercontent.com/thxCode/terraform-provider-windbag/master/tools/sshd.ps1 | Invoke-Expression;

```

## Example Usage

{{tffile "examples/provider/provider.tf"}}

> *NOTE*
>
> The `windbag_image` only support to use `ssh` protocol to connect to the Windows worker at present.

## Example With [Alibaba Cloud](https://registry.terraform.io/providers/aliyun/alicloud/latest/docs) Provider

{{tffile "examples/provider/integration/alicloud.tf"}}

### Generate terraform plan

```bash

$ tf plan \
   --var 'access_key=...' \
   --var 'secret_key=...' \
   --var 'host_image_list=["win2019_1809_x64_dtc_en-us_40G_container_alibase_20201120.vhd","winsvr_64_dtcC_1903_en-us_40G_alibase_20191012.vhd","wincore_1909_x64_dtc_en-us_40G_container_alibase_20200723.vhd","wincore_2004_x64_dtc_en-us_40G_container_alibase_20201120.vhd"]' \
   --var 'host_password=Windbag@Test' \
   --var 'image_registry_list=["registry.cn-hangzhou.aliyuncs.com", "registry.cn-hongkong.aliyuncs.com"]' \
   --var 'image_repository=foo' \
   --var 'image_name=bar' \
   --var 'image_tag=v0.0.0' \
   --var 'image_registry_username=...' \
   --var 'image_registry_password=...'

```

{{ .SchemaMarkdown | trimspace }}
